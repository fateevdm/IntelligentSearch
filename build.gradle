import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

// version = '1.0'

sourceCompatibility = 1.7
buildDir = 'target'
[compileJava, compileTestJava, javadoc, compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

configurations {
    all*.exclude group: 'log4j'
    compile.exclude module: 'commons-logging'
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:2.1.1'
    compile 'org.slf4j:slf4j-api:1.7.5',
            'org.languagetool:languagetool-core:2.1',
            'org.languagetool:language-ru:2.1',
            'org.languagetool:language-en:2.1',
            'org.languagetool:hunspell-native-libs:2.1',
            'org.slf4j:jcl-over-slf4j:1.7.5',
            'org.slf4j:log4j-over-slf4j:1.7.5',
            'ch.qos.logback:logback-core:1.0.0',
            'ch.qos.logback:logback-classic:1.0.0',
            'mysql:mysql-connector-java:5.1.25',
            'com.google.guava:guava:14.0.1',
            'org.apache.opennlp:opennlp:1.5.3',
            'org.apache.opennlp:opennlp-docs:1.5.3',
            'org.apache.opennlp:opennlp-distr:1.5.3',
            'org.apache.opennlp:opennlp-tools:1.5.3',
            'org.apache.opennlp:opennlp-maxent:3.0.3',
            'org.apache.opennlp:opennlp-uima:1.5.3',
            'org.apache.lucene:lucene-core:4.3.0',
            'edu.ucla.sspace:sspace:2.0.3'
    testCompile 'junit:junit:4.+',
            'org.mockito:mockito-all:1.9.0'
}

sourceSets{
    prototype
    main{
        compileClasspath = compileClasspath + files(prototype.output.classesDir)
    }
}

task sourceSetJavaProperties << {
    sourceSets {
        main {
            println "==========main=============="
            println "java.srcDirs = ${java.srcDirs}"
            println "resources.srcDirs = ${resources.srcDirs}"
            println "java.files = ${java.files.name}"
            println "allJava.files = ${allJava.files.name}"
            println "resources.files = ${resources.files.name}"
            println "allSource.files = ${allSource.files.name}"
            println "output.classesDir = ${output.classesDir}"
            println "output.resourcesDir = ${output.resourcesDir}"
            println "output.files = ${output.files}"
            println "compileClasspath = ${compileClasspath}"
            println "==========main=============="
        }
        prototype{
            println "==========prototype=============="
            println "java.srcDirs = ${java.srcDirs}"
            println "resources.srcDirs = ${resources.srcDirs}"
            println "java.files = ${java.files.name}"
            println "allJava.files = ${allJava.files.name}"
            println "resources.files = ${resources.files.name}"
            println "allSource.files = ${allSource.files.name}"
            println "output.classesDir = ${output.classesDir}"
            println "output.resourcesDir = ${output.resourcesDir}"
            println "output.files = ${output.files}"
            println "compileClasspath = ${compileClasspath}"
            println "==========prototype=============="
        }
    }
}